{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adambarhum/Downloads/final snake/src/components/Profiles/profiles.component.jsx\";\nimport React from \"react\";\nimport profileImg from \"../../assets/User_Icon.png\";\n\nfunction Profiles(props) {\n  let localData = JSON.parse(localStorage.getItem(\"registerData\")) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profiles_container\",\n    children: localData.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"DOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: localData.map((userData, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row px-3 py-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-pencil text-primary mr-4\",\n              \"aria-hidden\": \"true\",\n              onClick: e => props.history.push(\"/signup\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-trash text-danger\",\n              \"aria-hidden\": \"true\",\n              onClick: e => {\n                localData.splice(i, 1);\n                localStorage.setItem(\"registerData\", JSON.stringify(localData));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-3 py-3\",\n            children: userData.street + \",\" + userData.town\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-3 py-3\",\n            children: userData.bday.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-3 py-3\",\n            children: userData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-3 py-3\",\n            children: [userData.name, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-img-name\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"data:image/jpeg;base64\" + userData.image,\n                height: \"200\",\n                width: \"200\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No data available!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Profiles;\nexport default Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/Users/adambarhum/Downloads/final snake/src/components/Profiles/profiles.component.jsx"],"names":["React","profileImg","Profiles","props","localData","JSON","parse","localStorage","getItem","length","map","userData","i","e","history","push","splice","setItem","stringify","street","town","bday","slice","email","name","image","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport profileImg from \"../../assets/User_Icon.png\"\r\n\r\nfunction Profiles(props) {\r\n  let localData = JSON.parse(localStorage.getItem(\"registerData\")) || []\r\n  return (\r\n    <div className=\"profiles_container\">\r\n      {localData.length ? <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Address</th>\r\n            <th scope=\"col\">DOB</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Profile</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {localData.map((userData, i) => (\r\n            <tr>\r\n              <th scope=\"row px-3 py-3\">\r\n                <i class=\"fa fa-pencil text-primary mr-4\" aria-hidden=\"true\" onClick={e => props.history.push(\"/signup\")}></i>\r\n                <i class=\"fa fa-trash text-danger\" aria-hidden=\"true\" onClick={e => {\r\n                  localData.splice(i, 1)\r\n                  localStorage.setItem(\"registerData\", JSON.stringify(localData))\r\n                }}></i>\r\n              </th>\r\n              <td className=\"px-3 py-3\">{userData.street + \",\" + userData.town}</td>\r\n              <td className=\"px-3 py-3\">{userData.bday.slice(0, 10)}</td>\r\n              <td className=\"px-3 py-3\">{userData.email}</td>\r\n              <td className=\"px-3 py-3\">\r\n                {userData.name}\r\n                <div className=\"profile-img-name\">\r\n                  <img src={\"data:image/jpeg;base64\" + userData.image} height=\"200\" width=\"200\" alt=\"\" />\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> : <div style={{ textAlign: \"center\" }}>No data available!</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profiles;\r\n"]},"metadata":{},"sourceType":"module"}